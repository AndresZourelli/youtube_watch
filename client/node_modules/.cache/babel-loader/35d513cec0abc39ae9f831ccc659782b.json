{"ast":null,"code":"import _classCallCheck from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fazzbeast/Desktop/website/youtube_watch/client/src/components/home/home.js\";\n\n/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport PlayerControls from '../../components/PlayerControls/PlayerControls';\nimport ReactPlayer from 'react-player';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.updateWindowDimensions = function () {\n      _this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    _this._onReady = function (event) {\n      // access to player in all event handlers via event.target\n      var player = event.target;\n      player.pauseVideo();\n\n      _this.setState({\n        duration: player.getDuration()\n      });\n\n      clearInterval(_this.myInterval);\n      _this.myInterval = setInterval(function () {\n        if (!_this.state.isPaused) {\n          _this.setState(function (prevState) {\n            return {\n              time: prevState.time + 1,\n              seek: prevState.time + 1\n            };\n          });\n        }\n\n        ;\n\n        _this.timeformat(_this.state.seek);\n      }, 1000);\n    };\n\n    _this.barTimer = function () {\n      _this.setState({\n        isPaused: false\n      });\n    };\n\n    _this._playerPaused = function () {\n      _this.setState({\n        isPaused: !_this.state.isPaused\n      });\n    };\n\n    _this.timeformat = function (seconds) {\n      var seconds = Math.floor(seconds);\n      var minutes = Math.floor(seconds / 60);\n      var sseconds = seconds % 60 < 10 ? '0' + seconds % 60 : seconds % 60;\n\n      _this.setState({\n        percentage: minutes + ':' + sseconds\n      });\n\n      return minutes + ':' + sseconds;\n    };\n\n    _this.seekChange = function (event) {\n      _this.setState({\n        seek: event.target.value\n      });\n    };\n\n    _this.onTogglePlay = function () {\n      _this.setState({\n        playing: !_this.state.playing\n      });\n    };\n\n    _this.onProgress = function (event) {\n      if (!_this.state.isseeking) {\n        var time = _this.timeformat(event.playedSeconds);\n\n        _this.setState({\n          percentage: time,\n          seek: event.playedSeconds\n        });\n      }\n    };\n\n    _this.onDuration = function (event) {\n      console.log('onProgress', event);\n\n      _this.setState({\n        duration: event\n      });\n    };\n\n    _this.state = {\n      bar: 0,\n      width: 0,\n      height: 0,\n      time: 0,\n      percentage: 0,\n      seek: 0,\n      currentTime: 0,\n      duration: 0,\n      isPaused: true,\n      playing: false,\n      isseeking: 0\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var opts = {\n        height: this.state.width * 9 / 16,\n        //set the video to a 16:9 ratio based on window size\n        width: this.state.width,\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n          controls: 1\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"React Player\"), React.createElement(ReactPlayer, {\n        url: \"https://www.youtube.com/watch?v=UOxkGD8qRB4\",\n        width: opts.width,\n        height: opts.height,\n        playing: this.state.playing,\n        onProgress: this.onProgress,\n        onDuration: this.onDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.duration), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.percentage), React.createElement(PlayerControls, {\n        seeks: this.seekChange,\n        duration: this.state.duration,\n        seek: this.state.seek,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.onTogglePlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Pause/Play\"));\n    }\n  }]);\n\n  return Home;\n}(Component); // ///videoDuration = (event) => {\n// \t\tconst player = event.target;\n//     \tthis.setState({ time: player.getDuration(), percentage: player.getDuration() });\t\n// \t\t}\n// \tformatTime = (time) => {\n// \t\ttime = Math.round(time);\n// \t\tvar minutes = Math.floor(time/60),\n// \t\tseconds = time - minutes * 60;\n// \t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n// \t\treturn minutes + \":\" + seconds;\n// \t}\n// \tvideoCounters = (event) => {\n// \t\tconst player = event.target;\n// \t\tthis.setState({ currentTime: player.getCurrentTime() });\n// \t\tconsole.log(this.state.currentTime);\n// \t}\n// \tinitialize = (event) => {\n// \t\tclearInterval(this.time_update_interval);\n// \t\tthis.updateProgressBar(event);\n// \t\tthis.videoCounters(event);\n// \t\tconst time_update_interval = setInterval( function(event){\n// \t\t\tthis.videoCounters(event);\n// \t\t\tthis.updateProgressBar(event);\n// \t\t}, 1000)\n// \t}\n// \tupdateProgressBar = (event) => {\n// \t\tconst player=event.target;\n// \t\tvar bar = (player.getCurrentTime()/player.getDuration())*100;\n// \t\tthis.setState({bar:bar})\n// \t}\n\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/fazzbeast/Desktop/website/youtube_watch/client/src/components/home/home.js"],"names":["React","Component","YouTube","PlayerControls","ReactPlayer","Home","props","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","_onReady","event","player","target","pauseVideo","duration","getDuration","clearInterval","myInterval","setInterval","state","isPaused","prevState","time","seek","timeformat","barTimer","_playerPaused","seconds","Math","floor","minutes","sseconds","percentage","seekChange","value","onTogglePlay","playing","onProgress","isseeking","playedSeconds","onDuration","console","log","bar","currentTime","addEventListener","removeEventListener","opts","playerVars","autoplay","controls"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport PlayerControls from '../../components/PlayerControls/PlayerControls';\nimport ReactPlayer from 'react-player';\nexport default class Home extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { \n\t\t\tbar:0, \n\t\t\twidth: 0, \n\t\t\theight: 0, \n\t\t\ttime: 0, \n\t\t\tpercentage: 0 , \n\t\t\tseek: 0, \n\t\t\tcurrentTime:0, \n\t\t\tduration:0, \n\t\t\tisPaused:true,\n\t\t\tplaying: false,\n\t\t\tisseeking: 0\n\t\t\t};\n\t\t}\n\n\tcomponentDidMount(){\n\t\tthis.updateWindowDimensions();\n\t\twindow.addEventListener('resize', this.updateWindowDimensions);\n\t\t}\n\n\tcomponentWillUnmount(){\n\t\twindow.removeEventListener('resize',this.updateWindowDimensions);\n\t\t}\n\n\tupdateWindowDimensions = () => {\n\t\tthis.setState({width: window.innerWidth, height: window.innerHeight});\n\t\t}\n\n\t_onReady = (event) => {\n    \t// access to player in all event handlers via event.target\n    \tconst player = event.target;\n    \tplayer.pauseVideo();\n    \tthis.setState({ duration: player.getDuration()})\n\n\t\tclearInterval(this.myInterval);\n\t\tthis.myInterval = setInterval( () => {\n\t\t\tif(!this.state.isPaused){\n\t\t\t\tthis.setState(prevState => ({\n\t\t\t\ttime: prevState.time+1,\n\t\t\t\tseek: prevState.time+1\n\t\t\t\t\t}))\n\t\t\t\t};\n\t\t\tthis.timeformat(this.state.seek);\n\t\t\t}, 1000);\n\t\t\n\n\t\t}\n\t\n\t//this is the timer\n\tbarTimer = () => {\n\t\tthis.setState({isPaused: false})\n\n\t}\n\n\t_playerPaused = () =>{\n\t\t\tthis.setState({isPaused: !this.state.isPaused})\n\t}\n\n\ttimeformat = (seconds) => {\n\t\tvar seconds = Math.floor(seconds);\n\t\tconst minutes = Math.floor(seconds/60) ;\n\t\tconst sseconds = seconds%60 < 10 ? '0'+seconds%60 : seconds%60 ;\n\t\tthis.setState({percentage: minutes + ':' +sseconds});\n\t\treturn minutes + ':' +sseconds\n\t}\n\n\tseekChange = (event) => {\n\t\tthis.setState({seek: event.target.value});\n\t}\n\t\n\tonTogglePlay = () => {\n\t\tthis.setState({playing: !this.state.playing})\n\t}\n\tonProgress = (event) => {\n\t\t\n\t\tif (!this.state.isseeking){\n\t\t\tconst time = this.timeformat(event.playedSeconds);\n\t\t\tthis.setState({percentage: time, seek: event.playedSeconds})\n\t\t}\n\t}\n\n\tonDuration = (event) => {\n\t\tconsole.log('onProgress', event);\n\t\tthis.setState({duration: event})\n\t}\n\trender() {\n\t\tconst opts = {\n\t      height: this.state.width * 9/16, //set the video to a 16:9 ratio based on window size\n\t      width: this.state.width,\n\t      playerVars: { // https://developers.google.com/youtube/player_parameters\n\t        autoplay: 0,\n\t        controls: 1\n\t      }\n\t    };\n\n\t    return (\n\t      <div>\n\t      <h3>React Player</h3>\n\n\t      <ReactPlayer \n\t      \turl = 'https://www.youtube.com/watch?v=UOxkGD8qRB4' \n\t      \twidth = {opts.width} \n\t      \theight={opts.height}\n\t      \tplaying = {this.state.playing}\n\t      \tonProgress = {this.onProgress}\n\t      \tonDuration = {this.onDuration}\n\n\t      \t/>\n\n\t      <h1>{this.state.duration}</h1>\n\t      <h1>{this.state.percentage}</h1>\n\t      <PlayerControls seeks = {this.seekChange} duration={this.state.duration} seek={ this.state.seek } /> \n\t     <button onClick = {this.onTogglePlay} >Pause/Play</button>\n\t      </div>\n\t    );\n\t  }\n\n}\n\n\n\n\n// ///videoDuration = (event) => {\n// \t\tconst player = event.target;\n//     \tthis.setState({ time: player.getDuration(), percentage: player.getDuration() });\t\n// \t\t}\n\n// \tformatTime = (time) => {\n// \t\ttime = Math.round(time);\n// \t\tvar minutes = Math.floor(time/60),\n// \t\tseconds = time - minutes * 60;\n\n// \t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n\n// \t\treturn minutes + \":\" + seconds;\n// \t}\n\n// \tvideoCounters = (event) => {\n\n// \t\tconst player = event.target;\n\n// \t\tthis.setState({ currentTime: player.getCurrentTime() });\n// \t\tconsole.log(this.state.currentTime);\n// \t}\n\n// \tinitialize = (event) => {\n// \t\tclearInterval(this.time_update_interval);\n// \t\tthis.updateProgressBar(event);\n// \t\tthis.videoCounters(event);\n// \t\tconst time_update_interval = setInterval( function(event){\n// \t\t\tthis.videoCounters(event);\n// \t\t\tthis.updateProgressBar(event);\n// \t\t}, 1000)\n// \t}\n\n// \tupdateProgressBar = (event) => {\n// \t\tconst player=event.target;\n// \t\tvar bar = (player.getCurrentTime()/player.getDuration())*100;\n// \t\tthis.setState({bar:bar})\n// \t}\n"]},"metadata":{},"sourceType":"module"}