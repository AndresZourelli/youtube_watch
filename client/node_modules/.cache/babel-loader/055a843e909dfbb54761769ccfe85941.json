{"ast":null,"code":"import _classCallCheck from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fazzbeast/Desktop/website/youtube_watch/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fazzbeast/Desktop/website/youtube_watch/client/src/components/home/home.js\";\n\n/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport PlayerControls from '../../components/PlayerControls/PlayerControls';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _this.updateWindowDimensions = function () {\n      _this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    _this._onReady = function (event) {\n      // access to player in all event handlers via event.target\n      var player = event.target;\n      player.pauseVideo();\n    };\n\n    _this.barTimer = function () {\n      _this.myInterval = setInterval(function () {\n        _this.setState(function (prevState) {\n          return {\n            time: prevState.time + 1\n          };\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      bar: 0,\n      width: 0,\n      height: 0,\n      time: 0,\n      percentage: 0,\n      seek: 0,\n      currentTime: 0,\n      duration: 0\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var opts = {\n        height: this.state.width * 9 / 16,\n        //set the video to a 16:9 ratio based on window size\n        width: this.state.width,\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n          controls: 1\n        }\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(YouTube, {\n        videoId: \"UOxkGD8qRB4\",\n        opts: opts,\n        onReady: this._onReady,\n        onPlay: this.barTimer,\n        onStateChange: (this.videoDuration, this.videoCounter, this.updateProgressBar),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.time), React.createElement(PlayerControls, {\n        percentage: this.state.percentage,\n        seek: this.state.seek,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component); // ///videoDuration = (event) => {\n// \t\tconst player = event.target;\n//     \tthis.setState({ time: player.getDuration(), percentage: player.getDuration() });\t\n// \t\t}\n// \tformatTime = (time) => {\n// \t\ttime = Math.round(time);\n// \t\tvar minutes = Math.floor(time/60),\n// \t\tseconds = time - minutes * 60;\n// \t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n// \t\treturn minutes + \":\" + seconds;\n// \t}\n// \tvideoCounters = (event) => {\n// \t\tconst player = event.target;\n// \t\tthis.setState({ currentTime: player.getCurrentTime() });\n// \t\tconsole.log(this.state.currentTime);\n// \t}\n// \tinitialize = (event) => {\n// \t\tclearInterval(this.time_update_interval);\n// \t\tthis.updateProgressBar(event);\n// \t\tthis.videoCounters(event);\n// \t\tconst time_update_interval = setInterval( function(event){\n// \t\t\tthis.videoCounters(event);\n// \t\t\tthis.updateProgressBar(event);\n// \t\t}, 1000)\n// \t}\n// \tupdateProgressBar = (event) => {\n// \t\tconst player=event.target;\n// \t\tvar bar = (player.getCurrentTime()/player.getDuration())*100;\n// \t\tthis.setState({bar:bar})\n// \t}\n\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/fazzbeast/Desktop/website/youtube_watch/client/src/components/home/home.js"],"names":["React","Component","YouTube","PlayerControls","Home","props","updateWindowDimensions","setState","width","window","innerWidth","height","innerHeight","_onReady","event","player","target","pauseVideo","barTimer","myInterval","setInterval","prevState","time","state","bar","percentage","seek","currentTime","duration","addEventListener","removeEventListener","opts","playerVars","autoplay","controls","videoDuration","videoCounter","updateProgressBar"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport PlayerControls from '../../components/PlayerControls/PlayerControls';\n\nexport default class Home extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { bar:0, width: 0, height: 0, time: 0, percentage: 0 , seek: 0, currentTime:0, duration:0};\n\t\t}\n\n\tcomponentDidMount(){\n\t\tthis.updateWindowDimensions();\n\t\twindow.addEventListener('resize', this.updateWindowDimensions);\n\t\t}\n\n\tcomponentWillUnmount(){\n\t\twindow.removeEventListener('resize',this.updateWindowDimensions);\n\t\t}\n\n\tupdateWindowDimensions = () => {\n\t\tthis.setState({width: window.innerWidth, height: window.innerHeight});\n\t\t}\n\n\t_onReady = (event) => {\n    \t// access to player in all event handlers via event.target\n    \tconst player = event.target;\n    \tplayer.pauseVideo();\n\t\t}\n\t\n\t//this is the timer\n\tbarTimer = () => {\n\t\tthis.myInterval = setInterval( () => {\n\t\t\tthis.setState(prevState => ({\n\t\t\t\ttime: prevState.time+1\n\t\t\t}))\n\t\t\t}, 1000)\n\t}\n\n\trender() {\n\t\tconst opts = {\n\t      height: this.state.width * 9/16, //set the video to a 16:9 ratio based on window size\n\t      width: this.state.width,\n\t      playerVars: { // https://developers.google.com/youtube/player_parameters\n\t        autoplay: 0,\n\t        controls: 1\n\t      }\n\t    };\n\n\t    return (\n\t      <div>\n\t      <YouTube\n\t        videoId=\"UOxkGD8qRB4\"\n\t        opts={opts}\n\t        onReady={this._onReady}\n\t        onPlay={this.barTimer}\n\t        onStateChange={ this.videoDuration, this.videoCounter, this.updateProgressBar }\n\t      />\n\t      <h1>{this.state.time}</h1>\n\t      <PlayerControls percentage={this.state.percentage} seek={ this.state.seek } /> \n\t      </div>\n\t    );\n\t  }\n\n}\n\n\n\n\n// ///videoDuration = (event) => {\n// \t\tconst player = event.target;\n//     \tthis.setState({ time: player.getDuration(), percentage: player.getDuration() });\t\n// \t\t}\n\n// \tformatTime = (time) => {\n// \t\ttime = Math.round(time);\n// \t\tvar minutes = Math.floor(time/60),\n// \t\tseconds = time - minutes * 60;\n\n// \t\tseconds = seconds < 10 ? '0' + seconds : seconds;\n\n// \t\treturn minutes + \":\" + seconds;\n// \t}\n\n// \tvideoCounters = (event) => {\n\n// \t\tconst player = event.target;\n\n// \t\tthis.setState({ currentTime: player.getCurrentTime() });\n// \t\tconsole.log(this.state.currentTime);\n// \t}\n\n// \tinitialize = (event) => {\n// \t\tclearInterval(this.time_update_interval);\n// \t\tthis.updateProgressBar(event);\n// \t\tthis.videoCounters(event);\n// \t\tconst time_update_interval = setInterval( function(event){\n// \t\t\tthis.videoCounters(event);\n// \t\t\tthis.updateProgressBar(event);\n// \t\t}, 1000)\n// \t}\n\n// \tupdateProgressBar = (event) => {\n// \t\tconst player=event.target;\n// \t\tvar bar = (player.getCurrentTime()/player.getDuration())*100;\n// \t\tthis.setState({bar:bar})\n// \t}\n"]},"metadata":{},"sourceType":"module"}